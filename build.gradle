plugins {
    id "java-library"
    id "io.qameta.allure" version '2.11.2'
}

group 'guru.qa'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set('2.20.1')
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set('2.20.1')
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.12.2",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "com.github.javafaker:javafaker:1.0.2",
            "org.slf4j:slf4j-simple:2.0.6",
            "io.qameta.allure:allure-selenide:2.21.0",
            "org.seleniumhq.selenium:selenium-devtools-v109:4.8.0",
            "org.assertj:assertj-core:3.24.2",
            "io.github.bonigarcia:webdrivermanager:5.3.2",
            "org.aeonbits.owner:owner:1.0.12"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:2.0.5",
            "org.junit.jupiter:junit-jupiter-engine:5.9.1"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task ui_test(type: Test) {
    useJUnitPlatform {
        includeTags("ui")
    }
    systemProperties(System.getProperties())
}
